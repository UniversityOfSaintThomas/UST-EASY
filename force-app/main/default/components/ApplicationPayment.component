<!--
 - Created by Thaddaeus Dahlberg, Software Engineer, University of St. Thomas on 10/4/2022.
 -->

<apex:component id="ApplicationPayment" controller="ApplicationPaymentComponentController" allowDML="true">
    <apex:attribute name="appInfo" description="Application control and basic application information" type="EASYApplicationInfo" required="true" assignTo="{!appInfoParam}"/>
    <apex:attribute name="questionWrapper" description="" type="ApplicationQuestion" required="false" assignTo="{!question}"/>
    <apex:attribute name="responseObject" description="" type="SObject"/>
    <apex:attribute name="fieldAPI" description="" type="String"/>
    <apex:attribute name="inputType" description="" type="String"/>

    <apex:outputPanel layout="none" rendered="{!!ISBLANK(responseObject[fieldAPI])}">
        <p>{!responseObject[fieldAPI]}</p>
    </apex:outputPanel>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            console.log('here');
            document.getElementById('saveAndAdvance').style.display = 'none';
            document.getElementById('saveAndGoBack').style.display = 'none';
            document.querySelector('.questionGroupDescription').style.display = 'none';
        });
    </script>

    <apex:outputPanel layout="none" rendered="{!ISBLANK(responseObject[fieldAPI])}">
        <div id="div{!question.question.id}"></div>
        <script>
            const parameterValues{!question.question.id} = {!formParameters};
            //Create a dynamic form to break free of apex:form
            let payForm{!question.question.id} = document.createElement('form');
            payForm{!question.question.id}.setAttribute('method', 'POST');
            payForm{!question.question.id}.setAttribute('action', '{!gatewayURL}');
            payForm{!question.question.id}.setAttribute("id", "payForm{!question.question.id}");

            for (const key in parameterValues{!question.question.id}) {
                let formInput = document.createElement('input');
                if (parameterValues{!question.question.id}.hasOwnProperty(key)) {
                    formInput.type = 'hidden';
                    formInput.name = key;
                    formInput.value = parameterValues{!question.question.id}[key];
                    payForm{!question.question.id}.appendChild(formInput);
                }
            }
            document.getElementById('div{!question.question.id}').appendChild(payForm{!question.question.id});

            document.addEventListener('visibilitychange', function() {
                if (document.visibilityState === 'hidden') {
                    localStorage.setItem('inactiveTimestamp', new Date().getTime());
                } else if (document.visibilityState === 'visible') {
                    const inactiveTimestamp = localStorage.getItem('inactiveTimestamp');
                    if (inactiveTimestamp) {
                        const currentTime = new Date().getTime();
                        const hoursDifference = (currentTime - inactiveTimestamp) / (1000 * 60 * 60);
                        if (hoursDifference >= 8) {
                            location.reload();
                        }
                    }
                }
            });
        </script>

        <P>Amount: ${!paymentAmount}</P>

        <p class="slds-m-vertical_small">
            <a href="javascript:document.getElementById('payForm{!question.question.id}').submit();" class="slds-button slds-button_brand">Submit Deposit</a>
        </p>

        <apex:outputPanel layout="none" rendered="{!!ISBLANK(configurationMessage)}">
            <p class="slds-has-error slds-m-vertical_small">{!configurationMessage}</p>
        </apex:outputPanel>
    </apex:outputPanel>
</apex:component>