<apex:page controller="ApplicationAdminView" action="{!init}" showHeader="false" applyHtmlTag="false" lightningStyleSheets="true" cache="false" standardStylesheets="false" docType="html-5.0">
    <apex:composition template="GeneralSLDS">
        <c:ApplicationHead/>
        <apex:define name="scriptsHead">
            <script>
                async function lookupSearchJS(sObj, sObjFilter, sObjNameField, searchTerm) {
                    return new Promise((resolve, reject) => {
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.ApplicationAdminView.lookupSearch}',
                            sObj, sObjFilter, sObjNameField, searchTerm,
                            (result, event) => {
                                event.status ? resolve(result) : reject(event.message);
                            },
                            {escape: true}
                        );
                    });
                }
            </script>
        </apex:define>
        <apex:define name="metaPageTitle">TEST</apex:define>
        <apex:define name="body">

            <apex:variable value="0" var="reqIndex"/>

            <div id="loadSpinner" class="popupBackground">
                <div id="loading" class="PopupPanel">
                    <div class="background"></div>
                    <span style="font-family: Arial, Helvetica, sans-serif; font-size: 12px;">Please Wait..</span>
                </div>
            </div>

            <apex:outputPanel id="themessages">
                <apex:pageMessages/>
            </apex:outputPanel>

            <!--    <c:ApplicationBody title="{!req.title}" hideLogo="{!VALUE(reqIndex)!=0}" appInfo="{!appInfo}" vfPageName="ApplicationAdminView">-->
            <!--    <c:ApplicationBody title="Title" hideLogo="{!VALUE(reqIndex)!=0}" appInfo="{!appInfo}" vfPageName="ApplicationAdminView">-->
            <apex:repeat value="{!arLst}" var="req">

                <apex:variable var="itemCount" value="0"/>
                <apex:form>
                    <apex:repeat value="{!req.section.groups}" var="g" rendered="{!req.section.groups != null && req.section.groups.size > 0}">
                        <div class="item {!IF(VALUE(itemCount) == 0,'active','')}">
                            <c:ApplicationFormSection groupNewRelatedRecord="{!g.createNewReferenceObject}" group="{!g}" preventUpdates="false" appInfo="{!appInfo}"/>
                        </div>
                        <apex:variable var="itemCount" value="{!TEXT(VALUE(itemCount)+1)}"/>
                    </apex:repeat>
                </apex:form>
                <apex:variable var="reqIndex" value="{!TEXT(value(reqIndex) + 1)}"/>
            </apex:repeat>
            <!--    </c:ApplicationBody>-->

            <apex:outputLink styleClass="btn-lightning btn-lg" value="/{!applicationId}">Back to Application</apex:outputLink>

            <apex:form>
                <apex:actionFunction name="saveWithDocs" action="{!submit}" reRender="formPageMessages" oncomplete="appHideLoadingSpinner();">
                    <apex:param name="p1" value="" assignTo="{!additionalDataString}"/>
                </apex:actionFunction>
                <apex:commandLink styleClass="slds-button_brand" style="float:right;" value="Save" reRender="none" onclick="performDocUploadSave();appShowLoadingSpinner();"/>
            </apex:form>

            <br/>
            <br/>
        </apex:define>
    </apex:composition>
</apex:page>